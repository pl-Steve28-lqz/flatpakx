%header
  .header-content
    .header-content-inner
      %h1 the future of application distribution
      %hr
        %p Long gone are the days of trying to keep up with Linux distributions. Decouple your app from the OS Now!
        %a.btn.btn-primary.btn-xl.page-scroll{:href => "#about"} Find Out How
%section#about.bg-primary
  .container
    .row
      .col-lg-8.col-lg-offset-2.text-center
        %h2.section-heading Self-contained and future proof
        %hr.light
          %p.text-faded Distributing applications on Linux is a pain: different distributions, different versions, each with different library versions and conventions. Flatpak is here to change all that.
          %p &nbsp;
  .container
    .row
      .col-lg-4.col-sm-6
        %h3.text-center Cross platform
        %p Flatpak allows the same app to be installed on multiple Linux distributions
      .col-lg-4.col-sm-6
        %h3.text-center Stable
        %p With Flatpak, the same app can be installed on different distribution versions, without having to be updated
      .col-lg-4.col-lg-offset-0.col-sm-6.col-sm-offset-3
        %h3.text-center Secure
        %p Flatpak has been designed with security at heart, and provides a sandbox for each application

    .row
      .col-lg-12.text-center
        %h2.voffset How it works
    .row
      .col-lg-4.col-sm-6
        %h3.text-center Runtimes
        %p Runtimes contain the libraries and dependencies that you use to build your app. They are consistent across different distributions, and different runtime versions can be installed in parallel, meaning that your dependencies are always available in the form you expect.
      .col-lg-4.col-sm-6
        %h3.text-center Bundles
        %p If you want to use a library that isn't in a runtime, Flatpak allows it to bundle it as a part of your app. It is also possible to bundle modified versions of libraries that are present in a runtime.
      .col-lg-4.col-lg-offset-0.col-sm-6.col-sm-offset-3
        %h3.text-center Sandboxes
        %p Flatpak uses Linux technologies to isolate apps from the OS. This provides security for users, since they have limited access to files, system resources and hardware. (These features are still work in progress.)
        
        
%section#users
  .container
    .row
      .col-lg-10.col-lg-offset-1
        %h1.section-heading.text-center User Information
        %hr.primary
        %p
          Flatpak has many advantages for users. Applications can be safely updated
          on a running system, without fear of conflicts occuring during the update
          process. Multiple versions of the same application can be installed at
          the same time, which allows having a nightly or experimental version
          alongside a stable release. In the future, the security first approach
          of Flatpak will guarantee greater privacy and peace of mind.
        %h2 Trying Flatpak for yourself
        %p
          A collection of experimental application builds are already available
          with Flatpak, so you can try it yourself. It is currently easiest to
          use Flatpak with Fedora or Ubuntu.
        %h3 1. Install Flatpak
        %p
          Before you can install applications with Flatpak, you need to install the
          Flatpak itself. Currently this has to be done using the command line.
        %p
          With Fedora, run:
        %pre
          :preserve
            $ sudo dnf install xdg-app
        %p
          Or on Ubuntu, run:
        %pre
          :preserve
            $ sudo apt-get install xdg-app
        %h3 2. Add some repositories
        %p
          Flatpak uses remote repositories as the source for software. For this
          example we're using two repositories: one which contains GNOME apps,
          and one which contains the runtime that provides the dependencies
          they need.
        %pre
          :preserve
            $ curl -O https://sdk.gnome.org/nightly/keys/nightly.gpg
            $ xdg-app --user remote-add --gpg-key=nightly.gpg gnome-nightly http://sdk.gnome.org/nightly/repo/
        %h3 3. Install the runtime
        %p
          The runtime provides the dependencies needed by the apps in the GNOME
          repository.
        %pre
          :preserve
            $ xdg-app --user install gnome org.gnome.Platform 3.20
        %h3 4. View, install and run apps
        %p
          To view the list of available apps, run:
        %pre
          :preserve
            $ xdg-app --user remote-ls gnome-apps --app
        %p
          To install:
        %pre
          :preserve
            $ xdg-app --user install gnome-apps org.gnome.gedit stable
        %p
          Installed applications should appear in the usual place. You can also run them from the command line:
        %pre
          :preserve
            $ xdg-app run org.gnome.gedit stable

%section#developers.no-padding
  
%aside.bg-dark
  .container
    .call-to-action


  .container
    .row
      .col-lg-10.col-lg-offset-1
        %h1.section-heading.text-center 
        %hr.primary
        %p
          Developers can quickly get started using the tutorial below. Otherwise, 
          see the more detailed 
          =link_to 'developers page.', 'developer.html'
        %h2 Building an Application
        %p
          This tutorial requires xdg-app 0.4.12, which is available on Fedora 23 or 
          newer, or Ubuntu XXX or newer.
        %h3 1. Install Flatpak
        %p
          First we need to install Flatpak itself. If you are using Fedora, run:
        %pre
          :preserve
            $ sudo dnf install xdg-app
        %p Or if you're on Ubuntu, run:
        %pre
          :preserve
            $ sudo apt-get install xdg-app
        %h3 2. Install a runtime
        %p
          Flatpak requires every app to specify a runtime that it uses for its dependencies.
          We'll use the GNOME Developer Platform runtime for this. To install the runtime, 
          we first need to add the repository that provides it. To do this, run:
        %pre
          :preserve
            $ xdg-app remote-add --user --gpg-import=gnome-sdk.gpg gnome http://sdk.gnome.org/repo/
        %p And then install the runtime itself:
        %pre
          :preserve
            $ xdg-app --user install gnome org.gnome.Platform 3.20
        %h3 3. Create your app
        %p
          First we need to create the directory structure for the app:
        %pre
          :preserve
            mkdir hello
            mkdir hello/files
            mkdir hello/files/bin
            mkdir hello/export
        %p
          Now let's add something simple: create a file in 
          %code hello/files/bin/
          called 
          = succeed "." do
            %code hello.sh
          Then add the following to the file and save it:
        %pre
          :preserve
            #!/bin/sh
            echo "Hello world, from a sandbox"
        %p
          Now we need to provide some information about the application.
          In Flatpak this is specified in a key-value file called "metadata", which goes in 
          the
          = succeed "directory." do
            %code hello
          For a simple app this doesn't contain much, so we can create it manually:
        %pre
          :preserve
            [Application]
            name=org.test.Hello
            runtime=org.gnome.Platform/x86_64/master
            command=hello.sh
        %p
          This specifies the application identifier (
          %em> org.test.Hello
          ) as
          well as the runtime the application uses and the command to start the app with.
        %h3 4. Put the app in a repository
        %p
          Congratulations, you've made an app! To be able to install it, you need to put it
          in a repository. This is done with the build-export command:
        %pre
          :preserve
              xdg-app build-export repo hello
        %p
          This will initialize a local repository in the "repo" directory and export the app to it.
        %h3 5. Install
        %p
          Now we're ready to add the repository that was just created and install the app. 
          This is done with two commands:
        %pre
          :preserve
            xdg-app --user remote-add --no-gpg-verify tutorial-repo repo
            xdg-app --user install tutorial-repo org.test.Hello
        %h3 6. Run
        %p
          All that's left is to run the app. This can be done with:
        %pre
          :preserve
            xdg-app run org.test.Hello
        %p
          This will print
          = succeed "." do
            %em Hello world, from a sandbox
        %p
          Ta da! That's it: you've successfully built, installed and run your first 
          Flatpak. For a more detailed information about how to Flatpak a more complex 
          application,
          =link_to 'see the developers page.', 'developer.html'
    .row
      .col-lg-4.col-lg-offset-4
        %p &nbsp;
        =image_tag 'img/logo.svg', :class => 'full'
        %p &nbsp;          
%section#get-involved
  .container
    .row
      .col-lg-10.col-lg-offset-1
        %h1.section-heading.text-center Get Involved
        %hr.primary
        %p
          Flatpak is Free Software and is developed in the open, as a part of the Freedesktop 
          project. To get in touch, use the 
          %a{:href => "http://lists.freedesktop.org/mailman/listinfo/xdg-app"} xdg-app mailing list
          or 
          %em xdg-app
          IRC channel on Freenode. Code can be found on
          %a{:href => "https://github.com/alexlarsson/xdg-app"} Github
          and issues are tracked on 
          = succeed "." do
            %a{:href => "https://bugs.freedesktop.org/enter_bug.cgi?product=xdg-app"} Freedesktop Bugzilla
          
        %h2 Releases
        %p
          See
          %a{:href => "http://www.freedesktop.org/software/xdg-app/releases"} here
          for tarballs.
          Please note, the old name of Flatpak was xdg-app.
